2.0

Can be done in future release without braking backward compatibility
- optimize gradients
- public function determining whether data is matrix (colorutil.isMatrix)
- docs
- set verify to true
- cssrgb etc gradient
- repeat.invert
- document rotation center behavior on scaling (+translate??)
- example for generating any kind of gradient with specific colors
- take transformations apart from the gradients and cache some of the calculations
- optimise cache and compare benchmark
    - by not throwing away the converted colors in when converting long color path
    - by utilizing existing cache when converting colors
- hueFromColor hueFromValue add similar for each color components: s l v a r g b and think about the naming

Maybe
- color mix. functionality is basically there already
- radius for circle gradients. undefined = no radius. out of radius values are transparent
- circleMatrixColor by radius and distance instead of x & y
- maybe a shortcut method for getting the grayscale matrix (white, black, hue)
- maybe provide validation and input patterns

[![NPM](https://nodei.co/npm/color-util.png)](https://npmjs.org/package/color-util)